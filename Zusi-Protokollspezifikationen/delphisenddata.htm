<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<html>
<head>
	<title>Zusi-Protokoll für TCP-Netzwerkverbindungen</title>
	<link rel="stylesheet" type="text/css" href="index.css">
	<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">
	<meta name="generator" content="proton und windows notepad">
</head>
<body>
	<h1>Programmierbeispiel Daten senden</h1>
	<p>
		Dieses Delphi-Beispiel zeigt, wie ein Paket mit der korrekten Längenangabe
		gesendet wird. Zum Senden wird TWSocket aus der Internet Component Suite
		(ICS) verwendet. Das Paket selbst wird in diesem Fall als String erstellt,
		jede andere Möglichkeit als Stream oder Byte-Array ist natürlich ebenfalls
		möglich. Die Initialisierung mit den Chr-Befehlen dient nur als Beispiel
		für die Erstellung eines Befehls.
    </p>
    <pre>
<b>procedure</b> SendPacket;
<b>var</b>
  myPacket: <b>String</b>;
  I: Integer;
  myArray: <b>Array</b> [<font color="#008000">0..3</font>] <b>of</b> Byte;
  myCardinal: Cardinal;

<b>begin</b>
  <font color="#000080">// String initialisieren (Beispiel: ACK_HELLO)</font>
  myPacket := Chr(<font color="#008000">$00</font>)+Chr(<font color="#008000">$04</font>)+Chr(<font color="#008000">$00</font>);

  <font color="#000080">// Paketlänge festlegen</font>
  myCardinal := Length(myPacket);
  PCardinal(@myArray)^ := myCardinal;

  <font color="#000080">// Endgültigen Sendstring basteln</font>
  <font color="#000080">// Senden im Intel Byteorder-Format</font>
  <b>for</b> I := <font color="#008000">3</font> <b>downto</b> <font color="#008000">0</font> do
    myPacket := Chr(myArray[I]) + myPacket;

  <font color="#000080">// Senden</font>
  WSocket1.SendStr(myPacket);
<b>end</b>;
  </pre>
</body>
</html>